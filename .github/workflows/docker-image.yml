name: CI to Docker Hub

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      # - 
        # name: Linelint
        # uses: fernandrone/linelint@0.0.4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0
        with:
          install: true
      -  
        name: Generate build ID
        id: prep
        run: |
          branch=${GITHUB_REF##*/}
          # sha=${GITHUB_SHA::8}
          # ts=$(date +%s)
          ts=$(date +%Y-%m-%d--%H-%M)
          echo "::set-output name=BUILD_ID::${branch}-${ts}"          

      -     
        name: Cache Docker layers
        uses: actions/cache@v3.0.11
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Login to DockerHub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3.1.0
        with:
          context: ./
          file: ./Dockerfile
          push: true
          # platforms: linux/amd64, linux/arm64, linux/ppc64le, linux/s390x
          platforms: linux/amd64, linux/arm64, linux/s390x
          # platforms: linux/amd64, linux/s390x
          # platforms: linux/s390x
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest, 
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:v1,
                ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ steps.prep.outputs.BUILD_ID }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      
      -   
        name : Docker Scan Image
        id: scan
        uses: anchore/scan-action@v3.1.0
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          fail-build: false
          acs-report-enable: true
     
      # - 
      #   name: Upload result to GitHub Code Scanning
      #   uses: github/codeql-action/upload-sarif@v1
      #   with:
      #     sarif_file: ${{ steps.scan.outputs.sarif }}
      
      - 
        name: Container image scan
        uses: Azure/container-scan@v0.1
        with:
          image-name: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - 
        name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}
          args: --file=Dockerfile
      
      - 
        name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}